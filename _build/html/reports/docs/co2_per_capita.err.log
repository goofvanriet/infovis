Traceback (most recent call last):
  File "/home/goof/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/goof/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/goof/anaconda3/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/goof/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/goof/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/goof/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/goof/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# De daadwerkelijke waarden voor de tickvals
actual_tickvals = [0, 1, 2, 5, 10, 15, 20]

# Maak de kaart met een slider voor de jaren
fig = px.choropleth(df_co2_per_capita_cleaned, 
                    locations="Code", 
                    color="Annual COâ‚‚ emissions (per capita)", 
                    hover_name="Entity", 
                    animation_frame="Year",
                    color_continuous_scale=px.colors.sequential.Viridis,
                    range_color=(0, 25),
                    labels={'Annual COâ‚‚ emissions (per capita)': 'COâ‚‚ emissies (per capita)'},
                    title='COâ‚‚ emissie per capita ')

# Aanpassingen aan de layout
fig.update_layout(
    geo=dict(
        showframe=False,
        showcoastlines=True,
        projection_type='equirectangular',
        lataxis=dict(range=[-60, 90]),  # Zuidpool niet weergeven
        uirevision='fixed'  # Behoud de staat van de kaart tussen updates
    ),
    width=850,  # Vergroot de breedte van de kaart
    height=650,  # Vergroot de hoogte van de kaart
    title={
        'text': "COâ‚‚ emissies per capita",
        'y':0.95,
        'x':0.5,
        'xanchor': 'center',
        'yanchor': 'top',
        'font': {'size': 24}  # Grotere titel
    },
    coloraxis_colorbar=dict(
        title="",
        thicknessmode="pixels",
        thickness=30,
        lenmode="pixels",
        len=850,  # Langer maken van de colorbar
        orientation='h',  # Horizontale colorbar
        xanchor='center',
        x=0.5,
        y=-0.25,  # Plaatsing tussen slider en kaart
        ticks="outside",
        tickvals=actual_tickvals,  # gebruik visueel gelijk verdeelde tickvals
        ticktext=["0 t", "1 t", "2 t", "5 t", "10 t", "15 t", "20 t"]  # de daadwerkelijke waarden
    )
)

# Geen data kleur instellen
fig.update_geos(
    lakecolor="lightblue",
    projection_type="equirectangular",
    showcountries=False,
    countrycolor="gray",
    coastlinecolor="white"
)

# Kleur toelichting voor landen zonder data
fig.add_trace(
    px.choropleth(df_sorted, 
                  locations="Code", 
                  color="Annual COâ‚‚ emissions (per capita)", 
                  hover_name="Entity", 
                  animation_frame="Year",
                  color_continuous_scale=custom_color_scale,
                  range_color=(0, 40)).data[0]
)

fig.data[-1].update(
    showscale=True,
    colorscale=[[0, "rgb(169,169,169)"], [1, "rgb(169,169,169)"]],
    colorbar=dict(
        title="No data",
        ticks="",
        lenmode="pixels",
        len=50,
        y=-0.2,
        yanchor='top',
        x=0.5,
        xanchor='center',
        thickness=30,
        orientation='h'
    )
)

# Unieke jaren verkrijgen voor de slider stappen
unique_years = df_co2_per_capita_cleaned['Year'].unique()
unique_years.sort()  # Zorg ervoor dat de jaren gesorteerd zijn

# Aangepaste slider
fig.update_layout(
    sliders=[{
        'active': 0,
        'yanchor': 'top',
        'xanchor': 'left',
        'currentvalue': {
            'font': {'size': 20},
            'prefix': 'Year:',
            'visible': True,
            'xanchor': 'right'
        },
        'transition': {'duration': 10, 'easing': 'linear'},  # Sneller bewegen door jaren
        'pad': {'b': 10, 't': 50},
        'len': 0.9,
        'x': 0.07,
        'y': -0.1,  # Plaatsing van de slider lager om overlap te voorkomen
        'steps': [{
            'args': [[str(year)], {'frame': {'duration': 10, 'redraw': True},
                                   'mode': 'immediate',
                                   'transition': {'duration': 10}}],
            'label': str(year),
            'method': 'animate'
        } for year in unique_years]
    }]
)

# Toon de kaart
fig.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[5], line 66[0m
[1;32m     51[0m fig[38;5;241m.[39mupdate_geos(
[1;32m     52[0m     lakecolor[38;5;241m=[39m[38;5;124m"[39m[38;5;124mlightblue[39m[38;5;124m"[39m,
[1;32m     53[0m     projection_type[38;5;241m=[39m[38;5;124m"[39m[38;5;124mequirectangular[39m[38;5;124m"[39m,
[0;32m   (...)[0m
[1;32m     56[0m     coastlinecolor[38;5;241m=[39m[38;5;124m"[39m[38;5;124mwhite[39m[38;5;124m"[39m
[1;32m     57[0m )
[1;32m     59[0m [38;5;66;03m# Kleur toelichting voor landen zonder data[39;00m
[1;32m     60[0m fig[38;5;241m.[39madd_trace(
[1;32m     61[0m     px[38;5;241m.[39mchoropleth(df_sorted, 
[1;32m     62[0m                   locations[38;5;241m=[39m[38;5;124m"[39m[38;5;124mCode[39m[38;5;124m"[39m, 
[1;32m     63[0m                   color[38;5;241m=[39m[38;5;124m"[39m[38;5;124mAnnual COâ‚‚ emissions (per capita)[39m[38;5;124m"[39m, 
[1;32m     64[0m                   hover_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mEntity[39m[38;5;124m"[39m, 
[1;32m     65[0m                   animation_frame[38;5;241m=[39m[38;5;124m"[39m[38;5;124mYear[39m[38;5;124m"[39m,
[0;32m---> 66[0m                   color_continuous_scale[38;5;241m=[39mcustom_color_scale,
[1;32m     67[0m                   range_color[38;5;241m=[39m([38;5;241m0[39m, [38;5;241m40[39m))[38;5;241m.[39mdata[[38;5;241m0[39m]
[1;32m     68[0m )
[1;32m     70[0m fig[38;5;241m.[39mdata[[38;5;241m-[39m[38;5;241m1[39m][38;5;241m.[39mupdate(
[1;32m     71[0m     showscale[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[1;32m     72[0m     colorscale[38;5;241m=[39m[[[38;5;241m0[39m, [38;5;124m"[39m[38;5;124mrgb(169,169,169)[39m[38;5;124m"[39m], [[38;5;241m1[39m, [38;5;124m"[39m[38;5;124mrgb(169,169,169)[39m[38;5;124m"[39m]],
[0;32m   (...)[0m
[1;32m     84[0m     )
[1;32m     85[0m )
[1;32m     87[0m [38;5;66;03m# Unieke jaren verkrijgen voor de slider stappen[39;00m

[0;31mNameError[0m: name 'custom_color_scale' is not defined

